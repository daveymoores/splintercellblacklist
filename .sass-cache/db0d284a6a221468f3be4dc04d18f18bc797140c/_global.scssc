3.2.1 (Media Mark)
3a0b05c8d48c07eae82eceb6571578ab9de3cd5e
o:Sass::Tree::RootNode
:
@linei:@template"´(//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Maybe you want to create rems and pixels
// @function remCalc($pxWidth) {
//   @return $pxWidth / $em-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Override outline from normalize, we don't like it
  a:focus { outline: none; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@has_childrenT:@options{ :@children[Uo:Sass::Tree::CommentNode
:
@type:silent;i;	@;
[ :@value[")/*
 * Global Foundation Mixins
 * */o:Sass::Tree::VariableNode:@guarded"!default:
@name"experimental;i
:
@expro:Sass::Script::Bool;i
;	@;T;	@;
[ o;
;;;i;	@;
[ ;["0/* We use this to control border radius. */o:Sass::Tree::MixinDefNode;"radius;i;T;	@;
[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:
@linei:@underscored_name"radius:@options{ 0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:
@linei:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-webkit-border-radius;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"radius;i;"radius;	@	o:Sass::Tree::PropNode;["border-radius;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"radius;i;"radius;	@	:@splat0:
@args[[o:Sass::Script::Variable;"radius:@underscored_name"radius;	@o;	;"global-radius;i;"global_radius;	@o;
;;;i;	@;
[ ;["F/* We use this to create equal side border radius on elements. */o;;"side-radius;i;T;	@;
[u;õ[o:Sass::Script::Operation
:
@linei:@operand2o:Sass::Script::String	:
@type:identifier;i:@options{ :@value"	left:@operand1o:Sass::Script::Variable	:
@name"	side;i:@underscored_name"	side;@;@:@operator:equ:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:
@linei":@operand2o:Sass::Script::String	:
@type:identifier;i":@options{ :@value"
right:@operand1o:Sass::Script::Variable	:
@name"	side;i":@underscored_name"	side;@;@:@operator:equ:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:
@linei,:@operand2o:Sass::Script::String	:
@type:identifier;i,:@options{ :@value"top:@operand1o:Sass::Script::Variable	:
@name"	side;i,:@underscored_name"	side;@;@:@operator:equ:Sass::Tree::IfNode[o:Sass::Script::Operation
:
@linei6:@operand2o:Sass::Script::String	:
@type:identifier;i6:@options{ :@value"bottom:@operand1o:Sass::Script::Variable	:
@name"	side;i6:@underscored_name"	side;@;@:@operator:eq0[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@name"experimental:
@linei7:@underscored_name"experimental:@options{ 0[	o:Sass::Tree::PropNode;["#-moz-border-radius-bottomright;i8;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"radius;i8;"radius;	@	o;
;[""-moz-border-radius-bottomleft;i9;	@	;i ;[ ;;;o; 	;"radius;i9;"radius;	@	o;
;["'-webkit-border-bottom-right-radius;i:;	@	;i ;[ ;;;o; 	;"radius;i:;"radius;	@	o;
;["&-webkit-border-bottom-left-radius;i;;	@	;i ;[ ;;;o; 	;"radius;i;;"radius;	@	o:Sass::Tree::PropNode;["border-bottom-right-radius;i=;@:
@tabsi :@children[ :@prop_syntax:new;o;	;"radius;i=;"radius;@o;;["border-bottom-left-radius;i>;@;i ;[ ;;;o;	;"radius;i>;"radius;@[u;[o:Sass::Script::Variable	:
@name"experimental:
@linei-:@underscored_name"experimental:@options{ 0[	o:Sass::Tree::PropNode;[" -moz-border-radius-topright;i.;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"radius;i.;"radius;	@	o;
;["-moz-border-radius-topleft;i/;	@	;i ;[ ;;;o; 	;"radius;i/;"radius;	@	o;
;["$-webkit-border-top-right-radius;i0;	@	;i ;[ ;;;o; 	;"radius;i0;"radius;	@	o;
;["#-webkit-border-top-left-radius;i1;	@	;i ;[ ;;;o; 	;"radius;i1;"radius;	@	o:Sass::Tree::PropNode;["border-top-right-radius;i3;@:
@tabsi :@children[ :@prop_syntax:new;o;	;"radius;i3;"radius;@o;;["border-top-left-radius;i4;@;i ;[ ;;;o;	;"radius;i4;"radius;@[u;[o:Sass::Script::Variable	:
@name"experimental:
@linei#:@underscored_name"experimental:@options{ 0[	o:Sass::Tree::PropNode;[" -moz-border-radius-topright;i$;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"radius;i$;"radius;	@	o;
;["#-moz-border-radius-bottomright;i%;	@	;i ;[ ;;;o; 	;"radius;i%;"radius;	@	o;
;["$-webkit-border-top-right-radius;i&;	@	;i ;[ ;;;o; 	;"radius;i&;"radius;	@	o;
;["'-webkit-border-bottom-right-radius;i';	@	;i ;[ ;;;o; 	;"radius;i';"radius;	@	o:Sass::Tree::PropNode;["border-top-right-radius;i);@:
@tabsi :@children[ :@prop_syntax:new;o;	;"radius;i);"radius;@o;;["border-bottom-right-radius;i*;@;i ;[ ;;;o;	;"radius;i*;"radius;@[u;[o:Sass::Script::Variable	:
@name"experimental:
@linei:@underscored_name"experimental:@options{ 0[	o:Sass::Tree::PropNode;[""-moz-border-radius-bottomleft;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"radius;i;"radius;	@	o;
;["-moz-border-radius-topleft;i;	@	;i ;[ ;;;o; 	;"radius;i;"radius;	@	o;
;["&-webkit-border-bottom-left-radius;i;	@	;i ;[ ;;;o; 	;"radius;i;"radius;	@	o;
;["#-webkit-border-top-left-radius;i;	@	;i ;[ ;;;o; 	;"radius;i;"radius;	@	o:Sass::Tree::PropNode;["border-bottom-left-radius;i;@:
@tabsi :@children[ :@prop_syntax:new;o;	;"radius;i;"radius;@o;;["border-top-left-radius;i ;@;i ;[ ;;;o;	;"radius;i ;"radius;@;0;[[o;;"	side;"	side;	@0[o;;"radius;"radius;	@o;	;"global-radius;i;"global_radius;	@o;
;;;iB;	@;
[ ;["E/* We can control whether or not we have inset shadows edges. */o;;"inset-shadow;iC;T;	@;
[u;¬[o:Sass::Script::Variable	:
@name"experimental:
@lineiD:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-webkit-box-shadow;iE;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::List	;iE:@separator:
space;	@	;[o; 	;"shiny-edge-size;iE;"shiny_edge_size;	@	o; 	;"shiny-edge-color;iE;"shiny_edge_color;	@	o:Sass::Script::String	:
@type:identifier;iE;	@	;"
inseto:Sass::Tree::PropNode;["box-shadow;iG;	@:
@tabsi ;
[ :@prop_syntax:new;o:Sass::Script::List	;iG:@separator:
space;	@;[o;	;"shiny-edge-size;iG;"shiny_edge_size;	@o;	;"shiny-edge-color;iG;"shiny_edge_color;	@o:Sass::Script::String	;:identifier;iG;	@;"
insetu;ã[o:Sass::Script::Variable	:
@name"active:
@lineiI:@underscored_name"active:@options{ 0[o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;iI:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@;iI:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Parent;@;iIo:Sass::Selector::Pseudo
;@;["active:
@type:
class;iI:	@arg0;iI:@has_childrenT;	@	:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:
@lineiJ:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-webkit-box-shadow;iK;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::List	;iK:@separator:
space;	@	;[o; 	;"shiny-edge-size;iK;"shiny_edge_size;	@	o; 	;"shiny-edge-active-color;iK;"shiny_edge_active_color;	@	o:Sass::Script::String	:
@type:identifier;iK;	@	;"
inseto:Sass::Tree::PropNode;["box-shadow;iM;	@	;i ;[ :@prop_syntax:new:@valueo:Sass::Script::List	;iM:@separator:
space;	@	;![o; 	;"shiny-edge-size;iM;"shiny_edge_size;	@	o; 	;"shiny-edge-active-color;iM;"shiny_edge_active_color;	@	o:Sass::Script::String	;:identifier;iM;	@	;!"
inset:
@rule["&:active;0;[[o;;"active;"active;	@o;;iC;	@;To;
;;;iP;	@;
[ ;["5/* We use this to add transitions to elements */o;;"single-transition;iQ;T;	@;
[u;	[o:Sass::Script::Variable	:
@name"experimental:
@lineiR:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-webkit-transition;iS;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::List	;iS:@separator:
space;	@	;[o; 	;"property;iS;"property;	@	o; 	;"
speed;iS;"
speed;	@	o; 	;"	ease;iS;"	ease;	@	o;
;["-moz-transition;iT;	@	;i ;[ ;;;o;	;iT;;;	@	;[o; 	;"property;iT;"property;	@	o; 	;"
speed;iT;"
speed;	@	o; 	;"	ease;iT;"	ease;	@	o;;["transition;iV;	@;i ;
[ ;;;o;	;iV;; ;	@;[o;	;"property;iV;"property;	@o;	;"
speed;iV;"
speed;	@o;	;"	ease;iV;"	ease;	@;0;[[o;;"property;"property;	@o;!	;;";iQ;	@;"all[o;;"
speed;"
speed;	@o:Sass::Script::Number:@original"
300ms;iQ;	@:@denominator_units[ ;i,:@numerator_units["ms[o;;"	ease;"	ease;	@o;!	;;";iQ;	@;"ease-outo;
;;;iY;	@;
[ ;["@/* We use this to add box-sizing across browser prefixes */o;;"box-sizing;iZ;T;	@;
[u;<[o:Sass::Script::Variable	:
@name"experimental:
@linei[:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-moz-box-sizing;i\;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo; 	;"	type;i\;"	type;	@	o;
;["-webkit-box-sizing;i];	@	;i ;[ ;;;o; 	;"	type;i];"	type;	@	o;;["box-sizing;i_;	@;i ;
[ ;;;o;	;"	type;i_;"	type;	@;0;[[o;;"	type;"	type;	@o;!	;;";iZ;	@;"border-boxo;
;;;ib;	@;
[ ;["6/* We use this to create equilateral triangles */o;;"css-triangle;ic;T;	@;
[o;;["content;id;	@;i ;
[ ;;;o;!;;";	@;"""o;;["display;ie;	@;i ;
[ ;;;o;!;;";	@;"
blocko;;["
width;if;	@;i ;
[ ;;;o;!;;";	@;"0o;;["height;ig;	@;i ;
[ ;;;o;!;;";	@;"0o;;["border;ih;	@;i ;
[ ;;;o;	;ih;; ;	@;[o;!	;;";ih;	@;"
inseto;	;"triangle-size;ih;"triangle_size;	@u;d[o:Sass::Script::Operation
:
@lineii:@operand2o:Sass::Script::String	:
@type:identifier;ii:@options{ :@value"top:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;ii:@underscored_name"triangle_direction;@;@:@operator:eq0[o:Sass::Tree::PropNode;["border-color;ij;@:
@tabsi :@children[ :@prop_syntax:new;o:Sass::Script::List	;ij:@separator:
space;@;[	o;	;"triangle-color;ij;"triangle_color;@o;	;	;
;ij;@;"transparento;	;	;
;ij;@;"transparento;	;	;
;ij;@;"transparento;;["border-top-style;ik;@;i ;[ ;;;o;;	;
;@;"
solidu;j[o:Sass::Script::Operation
:
@lineim:@operand2o:Sass::Script::String	:
@type:identifier;im:@options{ :@value"bottom:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;im:@underscored_name"triangle_direction;@;@:@operator:eq0[o:Sass::Tree::PropNode;["border-color;in;@:
@tabsi :@children[ :@prop_syntax:new;o:Sass::Script::List	;in:@separator:
space;@;[	o;	;	;
;in;@;"transparento;	;	;
;in;@;"transparento;	;"triangle-color;in;"triangle_color;@o;	;	;
;in;@;"transparento;;["border-bottom-style;io;@;i ;[ ;;;o;;	;
;@;"
solidu;f[o:Sass::Script::Operation
:
@lineiq:@operand2o:Sass::Script::String	:
@type:identifier;iq:@options{ :@value"	left:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;iq:@underscored_name"triangle_direction;@;@:@operator:eq0[o:Sass::Tree::PropNode;["border-color;ir;@:
@tabsi :@children[ :@prop_syntax:new;o:Sass::Script::List	;ir:@separator:
space;@;[	o;	;	;
;ir;@;"transparento;	;	;
;ir;@;"transparento;	;	;
;ir;@;"transparento;	;"triangle-color;ir;"triangle_color;@o;;["border-left-style;is;@;i ;[ ;;;o;;	;
;@;"
solidu;h[o:Sass::Script::Operation
:
@lineiu:@operand2o:Sass::Script::String	:
@type:identifier;iu:@options{ :@value"
right:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;iu:@underscored_name"triangle_direction;@;@:@operator:eq0[o:Sass::Tree::PropNode;["border-color;iv;@:
@tabsi :@children[ :@prop_syntax:new;o:Sass::Script::List	;iv:@separator:
space;@;[	o;	;	;
;iv;@;"transparento;	;"triangle-color;iv;"triangle_color;@o;	;	;
;iv;@;"transparento;	;	;
;iv;@;"transparento;;["border-right-style;iw;@;i ;[ ;;;o;;	;
;@;"
solid;0;[[o;;"triangle-size;"triangle_size;	@0[o;;"triangle-color;"triangle_color;	@0[o;;"triangle-direction;"triangle_direction;	@0o;
;;;i{;	@;
[ ;[")/* We use this to do clear floats */o;;"clearfix;i|;T;	@;
[o;;["
*zoom;i};	@;i ;
[ ;;;o;!;;";	@;"1o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i~:@members[o:Sass::Selector::Sequence;+[o:#Sass::Selector::SimpleSequence
;*@Û;i~:@sourceso:Set:
@hash{ :@subject0;+[o:Sass::Selector::Parent;*@Û;i~o:Sass::Selector::Pseudo
;*@Û;["before;:
class;i~:	@arg0o;,;+[o;-
;*@Û;i~;.o;/;0{ ;10;+[o;2;*@Û;i~o;3
;*@Û;["
after;;4;i~;50;i~;T;	@;i ;
[o;;["content;i~;	@;i ;
[ ;;;o;!;;";	@;"" "o;;["display;i~;	@;i ;
[ ;;;o;!;;";	@;"
table:
@rule["&:before, &:aftero;';(o;);*" ;i;+[o;,;+[o;-
;*@;i;.o;/;0{ ;10;+[o;2;*@;io;3
;*@;["
after;;4;i;50;i;T;	@;i ;
[o;;["
clear;i;	@;i ;
[ ;;;o;!;;";	@;"	both;6["&:after;0;[ o;
;;;i~;	@;
[ ;["@/* We use this to add a glowing effect to block elements */o;;"block-glowing-effect;i;T;	@;
[u;7[o:Sass::Script::Variable	:
@name"experimental:
@linei:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-webkit-transition;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::List	;i:@separator:
comma;	@	;[o;	;i;:
space;	@	;[o:Sass::Script::String	:
@type:identifier;i;	@	;"-webkit-box-shadowo; 	;"fade-time;i;"fade_time;	@	o;	;i;;;	@	;[o;	;;;i;	@	;"border-coloro; 	;"fade-time;i;"fade_time;	@	o;	;;;i;	@	;"ease-in-outo;
;["-moz-transition;i;	@	;i ;[ ;;;o;	;i;;;	@	;[o;	;i;;;	@	;[o;	;;;i;	@	;"-moz-box-shadowo; 	;"fade-time;i;"fade_time;	@	o;	;i;;;	@	;[o;	;;;i;	@	;"border-coloro; 	;"fade-time;i;"fade_time;	@	o;	;;;i;	@	;"ease-in-outo;;["transition;i;	@;i ;
[ ;;;o;	;i;:
comma;	@;[o;	;i;; ;	@;[o;!	;;";i;	@;"box-shadowo;	;"fade-time;i;"fade_time;	@o;	;i;; ;	@;[o;!	;;";i;	@;"border-coloro;	;"fade-time;i;"fade_time;	@o;!	;;";i;	@;"ease-in-outo;';i;T;	@;i ;
[u;Ë[o:Sass::Script::Variable	:
@name"experimental:
@linei:@underscored_name"experimental:@options{ 0[o:Sass::Tree::PropNode;["-webkit-box-shadow;i;	@	:
@tabsi :@children[ :@prop_syntax:new:@valueo:Sass::Script::List	;i:@separator:
space;	@	;[	o:Sass::Script::Number:@original"0;i;	@	:@denominator_units[ ;i :@numerator_units[ o;;"0;i;	@	;@;i ;[ o;;"5px;i;	@	;[ ;i
;["pxo; 	;"glowing-effect-color;i;"glowing_effect_color;	@	o;
;["-moz-box-shadow;i;	@	;i ;[ ;;;o;	;i;;;	@	;[	o;;"0;i;	@	;@;i ;[ o;;"0;i;	@	;@;i ;[ o;;"5px;i;	@	;[ ;i
;["pxo; 	;"glowing-effect-color;i;"glowing_effect_color;	@	o;;["box-shadow;i;	@;i ;
[ ;;;o;	;i;; ;	@;[	o;#;$"0;i;	@;%[ ;i ;&[ o;#;$"0;i;	@;%@A;i ;&[ o;#;$"5px;i;	@;%[ ;i
;&["pxo;	;"glowing-effect-color;i;"glowing_effect_color;	@o;;["border-color;i;	@;i ;
[ ;;;o;	;"glowing-effect-color;i;"glowing_effect_color;	@;6["&:o;	;"selector;i;"selector;	@;0;[[o;;"selector;"selector;	@o;!	;;";i;	@;"
focus[o;;"fade-time;"fade_time;	@o;#;$"
300ms;i;	@;%[ ;i,;&["ms[o;;"glowing-effect-color;"glowing_effect_color;	@o:Sass::Script::Funcall;"fade-out;i:@keywords{ ;	@;0;[o;	;"primary-color;i;"primary_color;	@o;#;$"	0.25;i;	@;%@A;f	0.25;&[ o;
;;;i;	@;
[ ;["%/*
 * Foundation Variables
 * */o;
;;;i;	@;
[ ;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */o;
;;;i;	@;
[ ;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */o;;"!default;"base-font-size;i;o;#;$"	100%;i;	@;%[ ;ii;&["%;	@;
[ o;
;;;i;	@;
[ ;["B/* $base-line-height is 24px while $base-font-size is 16px */o;;"!default;"base-line-height;i;o;#;$"	150%;i;	@;%[ ;i;&["%;	@;
[ o;
;;;i;	@;
[ ;["M/* This is the default html and body font-size for the base em value. */o;;"!default;"em-base;i ;o;#;$"16;i ;	@;%@A;i;&[ ;	@;
[ o;
;;;i¢;	@;
[ ;["7/* It strips the unit of measure and returns it */o:Sass::Tree::FunctionNode;"strip-unit;i£;T;	@;
[o:Sass::Tree::ReturnNode	;i¤;o:Sass::Script::Operation
;i¤:@operand2o;<
;i¤;=o;#;$"1;i¤;	@;%@A;i;&[ :@operand1o;<
;i¤;=o;#;$"0;i¤;	@;%@A;i ;&[ ;>o;	;"num;i¤;"num;	@;	@:@operator:
times;	@;?:	plus;>o;	;"num;i¤;"num;	@;	@;?:div;	@;
[ ;0;[[o;;"num;"num;	@0o;
;;;i§;	@;
[ ;["5/* Converts "px" to "em" using the ($)em-base */o;:;"convert-to-em;i¨;T;	@;
[	o;;0;"
value;i©;o;<
;i©;=o;#;$"1em;i©;	@;%[ ;i;&["em;>o;<
;i©;=o;8;"strip-unit;i©;9{ ;	@;0;[o;	;"em-base;i©;"em_base;	@;>o;8;"strip-unit;i©;9{ ;	@;0;[o;	;"
value;i©;"
value;	@;	@;?;B;	@;?;@;	@;
[ u;|[o:Sass::Script::Operation
:
@lineiª:@operand2o:Sass::Script::Number:@original"0em;iª:@options{ :@denominator_units[ :@valuei :@numerator_units["em:@operand1o:Sass::Script::Variable	:
@name"
value;iª:@underscored_name"
value;
@	;
@	:@operator:eq0[o:Sass::Tree::VariableNode:@guarded0;"
value;iª:
@expro;;	"0;iª;
@	;[ ;i ;[ ;
@	:@children[ o;
;;;iª;	@;
[ ;["/* Turn 0em into 0 */o;;	;i«;o;	;"
value;i«;"
value;	@;	@;
[ ;0;[[o;;"
value;"
value;	@0o;
;;;i®;	@;
[ ;["/* Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
 * Just enter the number, no need to mention "px" */o;:;"emCalc;i°;T;	@;
[o;;0;"max;i±;o;8;"length;i±;9{ ;	@;0;[o;	;"values;i±;"values;	@;	@;
[ o;
;;;i±;	@;
[ ;["4/* Get the total number of parameters passed */o;
;;;i³;	@;
[ ;["¢/* If there is only 1 parameter, then return it as an integer.
 * This is done because a list can't be multiplied or divided even if it contains a single value */u;î[o:Sass::Script::Operation
:
@lineiµ:@operand2o:Sass::Script::Number:@original"1;iµ:@options{ :@denominator_units[ :@valuei:@numerator_units[ :@operand1o:Sass::Script::Variable	:
@name"max;iµ:@underscored_name"max;
@	;
@	:@operator:eq0[o:Sass::Tree::ReturnNode	;iµ:
@expro:Sass::Script::Funcall;"convert-to-em;iµ:@keywords{ ;
@	:@splat0:
@args[o;;"nth;iµ;{ ;
@	;0;[o;	;"values;iµ;"values;
@	o;;	"1;iµ;
@	;@
;i;[ ;
@	:@children[ o;;0;"emValues;i·;o;	;i·;; ;	@;[ ;	@;
[ o;
;;;i·;	@;
[ ;["E/* This will eventually store the converted $values in a list */o:Sass::Tree::ForNode:@exclusiveF;i¸:
@fromo;#;$"1;i¸;	@;%@A;i;&[ ;T;	@:	@var"i;
[o;;0;"emValues;i¹;o;8;"append;i¹;9{ ;	@;0;[o;	;"emValues;i¹;"emValues;	@o;8;"convert-to-em;i¹;9{ ;	@;0;[o;8;"nth;i¹;9{ ;	@;0;[o;	;"values;i¹;"values;	@o;	;"i;i¹;"i;	@;	@;
[ :@too;	;"max;i¸;"max;	@o;;	;i»;o;	;"emValues;i»;"emValues;	@;	@;
[ ;o;;"values;"values;	{ ;[ o;
;;;i¾;	@;
[ ;["}/* Maybe you want to create rems and pixels
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $em-base * 1rem;
 * } */o;
;;;iÃ;	@;
[ ;["8/* We use these to control various global styles */o;;"!default;"body-bg;iÄ;o:Sass::Script::Color	:@attrs{	:
alphai:
greeniÿ:	blueiÿ:rediÿ;iÄ;	@;0;	@;
[ o;;"!default;"body-font-color;iÅ;o;H	;I{	;Ji;Ki';Li';Mi';iÅ;	@;0;	@;
[ o;;"!default;"body-font-family;iÆ;o;	;iÆ;;7;	@;[
o;!	;:string;iÆ;	@;"Helvetica Neueo;!	;;N;iÆ;	@;"Helveticao;!	;;";iÆ;	@;"Helveticao;!	;;";iÆ;	@;"
Arialo;!	;;";iÆ;	@;"sans-serif;	@;
[ o;;"!default;"body-font-weight;iÇ;o;!	;;";iÇ;	@;"normal;	@;
[ o;;"!default;"body-font-style;iÈ;o;!	;;";iÈ;	@;"normal;	@;
[ o;
;;;iÊ;	@;
[ ;["0/* We use this to control font-smoothing */o;;"!default;"font-smoothing;iË;o;!	;;";iË;	@;"subpixel-antialiased;	@;
[ o;
;;;iÍ;	@;
[ ;[":/* We use these to control text direction settings */o;;"!default;"text-direction;iÎ;o;!	;;";iÎ;	@;"ltr;	@;
[ o;
;;;iÐ;	@;
[ ;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */o;;"!default;"default-float;iÑ;o;!	;;";iÑ;	@;"	left;	@;
[ o;;"!default;"opposite-direction;iÒ;o;!	;;";iÒ;	@;"
right;	@;
[ u;¼[o:Sass::Script::Operation
:
@lineiÓ:@operand2o:Sass::Script::String	:
@type:identifier;iÓ:@options{ :@value"ltr:@operand1o:Sass::Script::Variable	:
@name"text-direction;iÓ:@underscored_name"text_direction;@;@:@operator:equ:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:@guarded0:
@name"default-float:
@linei×:
@expro:Sass::Script::String	:
@type:identifier;i×:@options{ :@value"
right;@
:@children[ o; ;0;"opposite-direction;iØ;	o;
	;;;iØ;@
;"	left;@
;[ [o:Sass::Tree::VariableNode:@guarded0;"default-float;iÔ:
@expro;	;	;
;iÔ;@;"	left;@:@children[ o;;0;"opposite-direction;iÕ;o;	;	;
;iÕ;@;"
right;@;[ o;
;;;iÛ;	@;
[ ;["4/* We use these as default colors throughout */o;;"!default;"primary-color;iÜ;o;H	;I{	;Ji;Ki¦;LiË;Mi0;iÜ;	@;0;	@;
[ o;;"!default;"secondary-color;iÝ;o;H	;I{	;Ji;Kié;Lié;Mié;iÝ;	@;0;	@;
[ o;;"!default;"alert-color;iÞ;o;H	;I{	;Ji;Ki;Li;MiÆ;iÞ;	@;0;	@;
[ o;;"!default;"success-color;iß;o;H	;I{	;Ji;Ki¤;Li(;Mib;iß;	@;0;	@;
[ o;
;;;iá;	@;
[ ;["W/* We use these to make sure border radius matches unless we want it different. */o;;"!default;"global-radius;iâ;o;#;$"3px;iâ;	@;%[ ;i;&["px;	@;
[ o;;"!default;"global-rounded;iã;o;#;$"1000px;iã;	@;%[ ;iè;&["px;	@;
[ o;
;;;iå;	@;
[ ;["L/* We use these to control inset shadow shiny edges and depressions. */o;;"!default;"shiny-edge-size;iæ;o;	;iæ;; ;	@;[o;#;$"0;iæ;	@;%@A;i ;&[ o;#;$"1px;iæ;	@;%[ ;i;&["pxo;#;$"0;iæ;	@;%@A;i ;&[ ;	@;
[ o;;"!default;"shiny-edge-color;iç;o;8;"	rgba;iç;9{ ;	@;0;[o;H	;I{	;Ji;Kiÿ;Liÿ;Miÿ;iç;	@;0o;#;$"0.5;iç;	@;%@A;f0.5;&[ ;	@;
[ o;;"!default;"shiny-edge-active-color;iè;o;8;"	rgba;iè;9{ ;	@;0;[o;H	;I{	;Ji;Ki ;Li ;Mi ;iè;	@;0o;#;$"0.2;iè;	@;%@A;f0.20000000000000001 ;&[ ;	@;
[ o;
;;;iê;	@;
[ ;["[/* We use this to control whether or not CSS classes come through in the gem files. */o;;"!default;"include-html-classes;ië;o;;ië;	@;T;	@;
[ o;;"!default;"include-print-styles;iì;o;;iì;	@;T;	@;
[ o;;"!default;" include-html-global-classes;ií;o;	;"include-html-classes;ií;"include_html_classes;	@;	@;
[ o;
;;;iï;	@;
[ ;["/* Media Queries */o;;"!default;"small-screen;ið;o;#;$"
768px;ið;	@;%[ ;i ;&["px;	@;
[ o;;"!default;"medium-screen;iñ;o;#;$"1280px;iñ;	@;%[ ;i ;&["px;	@;
[ o;;"!default;"large-screen;iò;o;#;$"1440px;iò;	@;%[ ;i ;&["px;	@;
[ o;;"!default;"screen;iô;o;!	;;N;iô;	@;"only screen;	@;
[ o;;"!default;"
small;iõ;o:&Sass::Script::StringInterpolation
:@aftero;!	;;N;iõ;	@;");iõ:	@mido;	;"small-screen;iõ;"small_screen;	@;	@:@beforeo;!	;;N;iõ;	@;"!only screen and (min-width: ;	@;
[ o;;"!default;"medium;iö;o;O
;Po;!	;;N;iö;	@;");iö;Qo;	;"medium-screen;iö;"medium_screen;	@;	@;Ro;!	;;N;iö;	@;" only screen and (min-width:;	@;
[ o;;"!default;"
large;i÷;o;O
;Po;!	;;N;i÷;	@;");i÷;Qo;	;"large-screen;i÷;"large_screen;	@;	@;Ro;!	;;N;i÷;	@;" only screen and (min-width:;	@;
[ o;;"!default;"landscape;iø;o;!	;;N;iø;	@;"-only screen and (orientation: landscape);	@;
[ o;;"!default;"portrait;iù;o;!	;;N;iù;	@;",only screen and (orientation: portrait);	@;
[ o;
;;;iû;	@;
[ ;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */o;;"!default;"cursor-crosshair-value;iü;o;!	;;";iü;	@;"crosshair;	@;
[ o;;"!default;"cursor-default-value;iý;o;!	;;";iý;	@;"default;	@;
[ o;;"!default;"cursor-pointer-value;iþ;o;!	;;";iþ;	@;"pointer;	@;
[ o;;"!default;"cursor-help-value;iÿ;o;!	;;";iÿ;	@;"	help;	@;
[ o;;"!default;"cursor-text-value;i ;o;!	;;";i ;	@;"	text;	@;
[ u;[o:Sass::Script::Variable	:
@name" include-html-global-classes:
@linei:@underscored_name" include_html_global_classes:@options{ 0[#o:Sass::Tree::CommentNode
:
@type:silent;i;	@	:@children[ :@value["F/* Set box-sizing globally to handle padding and border widths */o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@;i:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Universal;@;i:@namespace0o;;["
o;
;@;i;o;;{ ;0;[o;;@;i;0o:Sass::Selector::Pseudo
;@;["before;:
class;i:	@arg0o;;["
o;
;@;i;o;;{ ;0;[o;;@;i;0o;
;@;["
after;;;i;0;i:@has_childrenT;	@	:
@tabsi ;[o:Sass::Tree::MixinNode;"box-sizing;i	:@keywords{ ;	@	;[ :@splat0:
@args[o:Sass::Script::String	;:identifier;i	;	@	;"border-box:
@rule["*,
  *:before,
  *:aftero;;o;;" ;i;[o;;[o;
;@<;i;o;;{ ;0;[o:Sass::Selector::Element	;@<;["	html;i;0o;;["
o;
;@<;i;o;;{ ;0;[o;(	;@<;["	body;i;0;i;T;	@	; i ;[o:Sass::Tree::PropNode;["font-size;i;	@	; i ;[ :@prop_syntax:new;o; 	;"base-font-size;i;"base_font_size;	@	;'["html,
  bodyo;

;;;i;	@	;[ ;["/* Default body styles */o;;o;;" ;i;[o;;[o;
;@a;i;o;;{ ;0;[o;(	;@a;["	body;i;0;i;T;	@	; i ;[o;);["background;i;	@	; i ;[ ;*;+;o; 	;"body-bg;i;"body_bg;	@	o;);["
color;i;	@	; i ;[ ;*;+;o; 	;"body-font-color;i;"body_font_color;	@	o;);["padding;i;	@	; i ;[ ;*;+;o;%;;&;	@	;"0o;);["margin;i;	@	; i ;[ ;*;+;o;%;;&;	@	;"0o;);["font-family;i;	@	; i ;[ ;*;+;o; 	;"body-font-family;i;"body_font_family;	@	o;);["font-weight;i;	@	; i ;[ ;*;+;o; 	;"body-font-weight;i;"body_font_weight;	@	o;);["font-style;i;	@	; i ;[ ;*;+;o; 	;"body-font-style;i;"body_font_style;	@	o;);["line-height;i;	@	; i ;[ ;*;+;o;%;;&;	@	;"1o;

;;;i;	@	;[ ;["F/* Set to $base-line-height to take on browser default of 150% */o;);["position;i;	@	; i ;[ ;*;+;o;%;;&;	@	;"relativeo;);["cursor;i;	@	; i ;[ ;*;+;o; 	;"cursor-default-value;i;"cursor_default_value;	@	;'["	bodyo;;o;;" ;i;[o;;[o;
;@²;i;o;;{ ;0;[o;(	;@²;["a;i;0o;
;@²;["
hover;;;i;0;i;T;	@	; i ;[o;);["cursor;i;	@	; i ;[ ;*;+;o; 	;"cursor-pointer-value;i;"cursor_pointer_value;	@	;'["a:hovero;

;;;i;	@	;[ ;["</* Override outline from normalize, we don't like it */o;;o;;" ;i ;[o;;[o;
;@Ð;i ;o;;{ ;0;[o;(	;@Ð;["a;i ;0o;
;@Ð;["
focus;;;i ;0;i ;T;	@	; i ;[o;);["outline;i ;	@	; i ;[ ;*;+;o;%;;&;	@	;"	none;'["a:focuso;

;;;i";	@	;[ ;["B/* Grid Defaults to get images and embeds to work properly */o;;o;;" ;i%;[o;;[o;
;@í;i%;o;;{ ;0;[o;(	;@í;["img;i%;0o;;["
o;
;@í;i%;o;;{ ;0;[o;(	;@í;["object;i%;0o;;["
o;
;@í;i%;o;;{ ;0;[o;(	;@í;["
embed;i%;0;i%;T;	@	; i ;[o;);["max-width;i%;	@	; i ;[ ;*;+;o;%;;&;	@	;"	100%o;);["height;i%;	@	; i ;[ ;*;+;o;%;;&;	@	;"	auto;'["img,
  object,
  embedo;;o;;" ;i(;[o;;[o;
;@;i(;o;;{ ;0;[o;(	;@;["object;i(;0o;;["
o;
;@;i(;o;;{ ;0;[o;(	;@;["
embed;i(;0;i(;T;	@	; i ;[o;);["height;i(;	@	; i ;[ ;*;+;o;%;;&;	@	;"	100%;'["object,
  embedo;;o;;" ;i);[o;;[o;
;@=;i);o;;{ ;0;[o;(	;@=;["img;i);0;i);T;	@	; i ;[o;);["-ms-interpolation-mode;i);	@	; i ;[ ;*;+;o;%;;&;	@	;"bicubic;'["imgo;;o;;" ;i,;[o;;[o;
;@S;i,;o;;{ ;0;[o:Sass::Selector::Id;@S;["map_canvas;i,o;;["
o;
;@S;i,;o;;{ ;0;[o:Sass::Selector::Class;@S;["map_canvas;i,;i,;T;	@	; i ;[o;;o;;" ;i/;[o;;[o;
;@k;i/;o;;{ ;0;[o;(	;@k;["img;i/;0o;;["
o;
;@k;i/;o;;{ ;0;[o;(	;@k;["
embed;i/;0o;;["
o;
;@k;i/;o;;{ ;0;[o;(	;@k;["object;i/;0;i/;T;	@	; i ;[o;);["max-width;i/;	@	; i ;[ ;*;+;o;%;;&;	@	;"none !important;'["img,
    embed,
    object;'["#map_canvas,
  .map_canvaso;

;;;i3;	@	;[ ;[",/* Miscellaneous useful HTML classes */o;;o;;" ;i4;[o;;[o;
;@;i4;o;;{ ;0;[o;-;@;["	left;i4;i4;T;	@	; i ;[o;);["
float;i4;	@	; i ;[ ;*;+;o;%;;&;	@	;"left !important;'["
.lefto;;o;;" ;i5;[o;;[o;
;@±;i5;o;;{ ;0;[o;-;@±;["
right;i5;i5;T;	@	; i ;[o;);["
float;i5;	@	; i ;[ ;*;+;o;%;;&;	@	;"right !important;'[".righto;;o;;" ;i6;[o;;[o;
;@Ç;i6;o;;{ ;0;[o;-;@Ç;["text-left;i6;i6;T;	@	; i ;[o;);["text-align;i6;	@	; i ;[ ;*;+;o;%;;&;	@	;"left !important;'[".text-lefto;;o;;" ;i7;[o;;[o;
;@Ý;i7;o;;{ ;0;[o;-;@Ý;["text-right;i7;i7;T;	@	; i ;[o;);["text-align;i7;	@	; i ;[ ;*;+;o;%;;&;	@	;"right !important;'[".text-righto;;o;;" ;i8;[o;;[o;
;@ó;i8;o;;{ ;0;[o;-;@ó;["text-center;i8;i8;T;	@	; i ;[o;);["text-align;i8;	@	; i ;[ ;*;+;o;%;;&;	@	;"center !important;'[".text-centero;;o;;" ;i9;[o;;[o;
;@	;i9;o;;{ ;0;[o;-;@	;["text-justify;i9;i9;T;	@	; i ;[o;);["text-align;i9;	@	; i ;[ ;*;+;o;%;;&;	@	;"justify !important;'[".text-justifyo;;o;;" ;i:;[o;;[o;
;@;i:;o;;{ ;0;[o;-;@;["	hide;i:;i:;T;	@	; i ;[o;);["display;i:;	@	; i ;[ ;*;+;o;%;;&;	@	;"	none;'["
.hideo;

;;;i<;	@	;[ ;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */o;;o;;" ;i@;[o;;[o;
;@9;i@;o;;{ ;0;[o;-;@9;["antialiased;i@;i@;T;	@	; i ;[o;);["-webkit-font-smoothing;i@;	@	; i ;[ ;*;+;o;%;;&;	@	;"antialiased;'[".antialiasedo;

;;;iB;	@	;[ ;["W/* Get rid of gap under images by making them display: inline-block; by default */o;;o;;" ;iC;[o;;[o;
;@S;iC;o;;{ ;0;[o;(	;@S;["img;iC;0;iC;T;	@	; i ;[o;);["display;iD;	@	; i ;[ ;*;+;o;%;;&;	@	;"inline-blocko;);["vertical-align;iE;	@	; i ;[ ;*;+;o;%;;&;	@	;"middle;'["imgo;

;;;iH;	@	;[ ;["(/*
 * Global resets for forms
 * */o;

;;;iL;	@	;[ ;[";/* Make sure textarea takes on height automatically */o;;o;;" ;iM;[o;;[o;
;@w;iM;o;;{ ;0;[o;(	;@w;["textarea;iM;0;iM;T;	@	; i ;[o;);["height;iM;	@	; i ;[ ;*;+;o;%;;&;	@	;"	autoo;);["min-height;iM;	@	; i ;[ ;*;+;o;%;;&;	@	;"	50px;'["textareao;

;;;iO;	@	;[ ;["5/* Make select elements 100% width by default */o;;o;;" ;iP;[o;;[o;
;@;iP;o;;{ ;0;[o;(	;@;["select;iP;0;iP;T;	@	; i ;[o;);["
width;iP;	@	; i ;[ ;*;+;o;%;;&;	@	;"	100%;'["select